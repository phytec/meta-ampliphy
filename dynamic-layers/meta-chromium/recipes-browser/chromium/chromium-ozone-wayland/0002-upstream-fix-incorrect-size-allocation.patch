From 7efb6857a17195f08b609129e92732e19aa1d54c Mon Sep 17 00:00:00 2001
From: Reito <carolwolfking@gmail.com>
Date: Sat, 09 Mar 2024 12:23:57 +0000
Subject: [PATCH] fix: Use correct size when GbmBuffer::CreateBufferWithModifiers

Upstream-Status: Backport [https://chromium.googlesource.com/chromium/src/+/7efb6857a17195f08b609129e92732e19aa1d54c]

CreateBufferWithModifiers currently uses the wrong size used for
verification when creating gfx::Buffer, which can be different
(1x1) from the real size on linux due to a bug in nvidia driver.
Use real size when creating gfx::Buffer instead.

Bug: 327768768
Change-Id: Ic3e619bd1dd5afd050c1f5a76f73638c6f350da3
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5338184
Reviewed-by: Mitsuru Oshima <oshima@chromium.org>
Reviewed-by: Nick Yamane <nickdiego@igalia.com>
Commit-Queue: Reito OvO <carolwolfking@gmail.com>
Cr-Commit-Position: refs/heads/main@{#1270603}
---

diff --git a/ui/gfx/linux/gbm_wrapper.cc b/ui/gfx/linux/gbm_wrapper.cc
index c0dfe4fd..58c3c0b 100644
--- a/ui/gfx/linux/gbm_wrapper.cc
+++ b/ui/gfx/linux/gbm_wrapper.cc
@@ -312,7 +312,7 @@
     // do the create/import modifiers validation loop below using a separate set
     // of 1x1 BOs which are destroyed before creating the final BO creation used
     // to instantiate the returned GbmBuffer.
-    gfx::Size size =
+    gfx::Size size_for_verification =
 #if BUILDFLAG(IS_LINUX)
         gfx::Size(1, 1);
 #else
@@ -324,16 +324,18 @@

     while (!valid_modifiers && !filtered_modifiers.empty()) {
       created_bo = gbm_bo_create_with_modifiers(
-          device_, size.width(), size.height(), format,
-          filtered_modifiers.data(), filtered_modifiers.size());
+          device_, size_for_verification.width(),
+          size_for_verification.height(), format, filtered_modifiers.data(),
+          filtered_modifiers.size());
       if (!created_bo) {
         return nullptr;
       }

       const int planes_count = gbm_bo_get_plane_count(created_bo);
       struct gbm_import_fd_modifier_data fd_data = {
-          .width = base::checked_cast<uint32_t>(size.width()),
-          .height = base::checked_cast<uint32_t>(size.height()),
+          .width = base::checked_cast<uint32_t>(size_for_verification.width()),
+          .height =
+              base::checked_cast<uint32_t>(size_for_verification.height()),
           .format = format,
           .num_fds = base::checked_cast<uint32_t>(planes_count),
           .modifier = gbm_bo_get_modifier(created_bo)};
@@ -358,7 +360,7 @@
             GetFilteredModifiers(format, flags, filtered_modifiers);
       }

-      if (!valid_modifiers || size != requested_size) {
+      if (!valid_modifiers || size_for_verification != requested_size) {
         gbm_bo_destroy(created_bo);
         created_bo = nullptr;
       }
@@ -374,8 +376,10 @@
       PLOG_IF(ERROR, !created_bo) << "Failed to create BO with modifiers.";
     }

-    return created_bo ? CreateBufferForBO(created_bo, format, size, flags)
-                      : nullptr;
+    // TODO(327768768): Add a test for this about size.
+    return created_bo
+               ? CreateBufferForBO(created_bo, format, requested_size, flags)
+               : nullptr;
   }

   std::unique_ptr<ui::GbmBuffer> CreateBufferFromHandle(
